{"title":"test code","author":"abanoub","description":"I will dump a lot of code and see what I get.","text":"\r\n// this is the main file that should be run\r\n\r\n// include some node.js modules\r\nconst path = require(\"path\");\r\nconst fs = require(\"fs\");\r\n\r\n// include my modules\r\nconst ar = require(\"./Article.js\");\r\nconst hf = require(\"./helper_functions.js\");\r\nconst st = require(\"./structures.js\");\r\n\r\n// default cache directory can be changed in the helper_functions.js\r\nconst cache_dir = hf.cache_dir;\r\n\r\n// express stuff\r\nconst express = require('express');\r\nconst app = express();\r\nconst bodyParser = require('body-parser');\r\n\r\nconst urlencodedParser = bodyParser.urlencoded({ extended: false });\r\n\r\n// change localhost to the machines ip in case of a problem in windows\r\nconst host = \"localhost\";\r\n// change the ip if it is used by another app on the system\r\nconst port = 8000;\r\n\r\napp.use(express.static(__dirname));\r\napp.get('/', function (req, res) {\r\n    //res.sendFile(__dirname + \"/root/\" + \"index.html\");\r\n    //res.end(doc_begin + buttons + doc_end);\r\n    res.redirect(\"/list_articles\");\r\n});\r\n\r\n// start the server\r\nvar server = app.listen(port, function () {\r\n   console.log(\"Server listening at http://%s:%s\", host, port)\r\n});\r\n\r\napp.get(\"/list_articles\", urlencodedParser, function (req, res) {\r\n    let files = \"\";\r\n\r\n    if (hf.cache_dir_exists(0))\r\n        fs.readdirSync(cache_dir).forEach(file => {\r\n            files += '<button class=\"del_article\" onclick=\"delete_article_func(\\'' + file + '\\')\">'\r\n                + 'delete ' + '</button>';\r\n            files += '<button class=\"article\" onclick=\"open_article_func(\\'' + file + '\\')\">'\r\n                + file.replace(/_/g, \" \") + '</button></br>';\r\n        });\r\n\r\n    if (files == \"\")\r\n        hf.print_msg(res, \"No articles to show\");\r\n    else\r\n        res.end(st.prepare_head(\"Articles list\", \"Articles\") + st.buttons + st.open_article_form\r\n            + st.open_article_script + st.delete_article_form + st.delete_article_script + files + st.doc_end);\r\n\r\n});\r\n\r\napp.get(\"/create_article\", urlencodedParser, function (req, res) {\r\n    res.end(st.prepare_head(\"Create an article\", \"New article\") + st.buttons + st.errs_pr\r\n        + st.create_article_form + st.save_article_script + st.doc_end);\r\n});\r\n\r\napp.post(\"/save_article\", urlencodedParser, function (req, res) {\r\n    //console.log(req.body.update);\r\n    let temp = new ar.Article(req.body.title, req.body.author, req.body.description, req.body.text);\r\n\r\n    if (temp.save_to_disk(cache_dir + req.body.title, req.body.update))\r\n        if (req.body.update == \"false\")\r\n            hf.print_msg(res, \"Article written to disk\");\r\n        else\r\n            hf.print_msg(res, \"Article updated\");\r\n    else\r\n        hf.print_msg(res, \"could not write article to disk\");\r\n});\r\n\r\napp.post(\"/get_article_content\", urlencodedParser, function (req, res) {\r\n    //console.log(\"filename:\", req.body.name);\r\n    try {\r\n        var file = fs.readFileSync(cache_dir + req.body.name);\r\n    } catch (err) {\r\n        console.log(err);\r\n        hf.print_msg(res, \"could not open file\");\r\n    }\r\n\r\n    let temp = JSON.parse(file);\r\n    res.send(new ar.Article(temp.title, temp.author, temp.description, temp.text));\r\n});\r\n\r\n// same can be done with jquery or ajax\r\n/*\r\n$.post(\"get_article_content\", { name: \"${req.body.name}\" }, function(result) {\r\n//console.log(result.title);\r\n//console.log(result.author);\r\n//console.log(result.description);\r\n//console.log(result.text);\r\n$(\"#title\").val(result.title)\r\n$(\"#author\").val(result.author)\r\n$(\"#description\").val(result.description)\r\n$(\"#text\").val(result.text)\r\n});\r\n*/\r\napp.post(\"/open_article\", urlencodedParser, function (req, res) {\r\n\r\n    let delete_button = '<button class=\"form_button\" onclick=\"delete_article_func(\\'' + req.body.name + '\\')\">'\r\n                + 'delete' + '</button>';\r\n\r\n    let update_button = '<button class=\"form_button\" onclick=\"save_article_func(\\'true\\')\" />update</button>';\r\n    let restore_button = '<button class=\"form_button\" onclick=\"check_and_fill_form()\" />restore</button>';\r\n\r\n    res.end(st.prepare_head(\"Update article\", \"\") + st.buttons + st.errs_pr + st.create_article_form\r\n        + st.save_article_script + delete_button + update_button + restore_button + st.delete_article_form\r\n        + st.delete_article_script + st.prepare_form_script(req.body.name) + st.doc_end);\r\n});\r\n\r\napp.post(\"/delete_article\", urlencodedParser, function (req, res) {\r\n    try {\r\n        //console.log(\"deleted\", req.body.name);\r\n        fs.unlinkSync(cache_dir + req.body.name);\r\n        res.redirect('/list_articles');\r\n    } catch (err) {\r\n        console.log(err);\r\n        hf.print_msg(res, \"could not delete file\");\r\n    }\r\n});\r\n"}